loopback_users.guest = false
listeners.tcp.default = 5672
management.tcp.port = 15672

##
## Clustering
## =====================
##
# cluster_partition_handling = ignore

## pause_if_all_down strategy require additional configuration
cluster_partition_handling = pause_if_all_down

## Recover strategy. Can be either 'autoheal' or 'ignore'
cluster_partition_handling.pause_if_all_down.recover = autoheal

## Node names to check
cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@rmq-01
cluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@rmq-02
cluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@rmq-03

## Mirror sync batch size, in messages. Increasing this will speed
## up syncing but total batch size in bytes must not exceed 2 GiB.
## Available in RabbitMQ 3.6.0 or later.
##
# mirroring_sync_batch_size = 4096

## Make clustering happen *automatically* at startup. Only applied
## to nodes that have just been reset or started for the first time.
##
## Relevant doc guide: https://rabbitmq.com//cluster-formation.html
##

cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config

cluster_formation.classic_config.nodes.1 = rabbit@rmq-01
cluster_formation.classic_config.nodes.2 = rabbit@rmq-02
cluster_formation.classic_config.nodes.3 = rabbit@rmq-03

## DNS-based peer discovery. This backend will list A records
## of the configured hostname and perform reverse lookups for
## the addresses returned.

# cluster_formation.peer_discovery_backend = rabbit_peer_discovery_dns
# cluster_formation.dns.hostname = discovery.eng.example.local

## This node's type can be configured. If you are not sure
## what node type to use, always use 'disc'.
cluster_formation.node_type = disc
